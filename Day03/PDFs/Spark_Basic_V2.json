{"paragraphs":[{"title":"1. Map Function","text":"val rdd = sc.parallelize(0 until 100)\nval res = rdd.map(x => x*2)\nres.collect()","user":"train292","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859920_-418623539","id":"20170523-115209_150170221","dateCreated":"2018-12-04T22:07:39-0600","dateStarted":"2018-12-04T22:07:48-0600","dateFinished":"2018-12-04T22:07:48-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7480"},{"text":"%pyspark\nrdd = sc.parallelize(range(0 , 100))\nres = rdd.map(lambda x : x*2)\nres.collect()","user":"train292","dateUpdated":"2018-12-05T06:53:28-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859920_-418623539","id":"20181204-144152_1151606512","dateCreated":"2018-12-04T22:07:39-0600","dateStarted":"2018-12-04T22:07:52-0600","dateFinished":"2018-12-04T22:07:58-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7481"},{"title":"2. reduce Function","text":"val rdd = sc.parallelize(1 until 10)\nval res = rdd.reduce(_ + _)","user":"train292","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859921_-419008288","id":"20170523-115411_1338753673","dateCreated":"2018-12-04T22:07:39-0600","dateStarted":"2018-12-05T06:24:53-0600","dateFinished":"2018-12-05T06:24:54-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7482"},{"text":"%pyspark \nrdd = sc.parallelize(range(0,10))\nres = rdd.reduce( lambda x, y: x +y )\nres","dateUpdated":"2018-12-05T06:53:28-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859921_-419008288","id":"20181204-144211_1460501157","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7483"},{"title":"3. flatmap function","text":"val rdd = sc.parallelize(List(List(1,2,3,4), List(5,6,7,8)))\nval res = rdd.flatMap(x => x)\nres.collect()\n\nval res = rdd.flatMap(x => x.map(y => y*2))\nres.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859921_-419008288","id":"20170523-115259_1368017428","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7484"},{"text":"%pyspark\n\nrdd = sc.parallelize( [ [1,2,3,4], [5,6,7,8]])\nres = rdd.flatMap(lambda x: x)\nprint res.collect()\nres =rdd.flatMap (lambda x : [i * 2 for i in x])\nprint res.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859921_-419008288","id":"20181204-143253_701896588","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7485"},{"title":"4. mapPartitions function","text":"val rdd = sc.parallelize(0 until 8, 2)\nrdd.collect\nval res = rdd.mapPartitions(x => List(x.sum).iterator)\nres.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859922_-417854041","id":"20170523-115337_1556285525","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7486"},{"text":"%pyspark\nrdd = sc.parallelize(range(0, 8), 2)\nres = rdd.mapPartitions (lambda x: [sum(x)])\nprint res.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859922_-417854041","id":"20181204-151101_1948537067","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7487"},{"title":"5. filter function","text":"val rdd = sc.parallelize(0 until 100)\nval res = rdd.filter(x => x%2 == 0)\nres.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859922_-417854041","id":"20170523-115327_1071773324","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7488"},{"text":"%pyspark\nrdd = sc.parallelize(range(0, 100))\nres = rdd.filter(lambda x: x%2 ==0)\nres.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859922_-417854041","id":"20181204-174633_737830830","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7489"},{"title":"6. groupBy Function","text":"val rdd = sc.parallelize(0 until 100)\nval res = rdd.groupBy(x => x%2 == 0)\nres.collect.foreach(println)","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859923_-418238790","id":"20170523-115402_1545385034","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7490"},{"text":"%pyspark\nrdd = sc.parallelize(range(0, 100))\nres = rdd.groupBy(lambda x: x%2 ==0)\nres2=res.map(lambda x, y : x.join(' '.join(map(str, y ))))\nprint(\"(%s, %s) \" % (res.collect()[0][0], ' '.join(map(str, res.collect()[0][1])) ))\nprint(\"(%s, %s) \" % (res.collect()[1][0], ' '.join(map(str, res.collect()[1][1])) ))","dateUpdated":"2018-12-05T06:53:28-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859923_-418238790","id":"20181204-175016_1029639810","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7491"},{"title":"7. zipWithIndex Function","text":"val rdd = sc.parallelize(List(\"a\", \"b\", \"c\", \"d\"))\nval res = rdd.zipWithIndex()\nres.collect()","dateUpdated":"2018-12-05T06:53:28-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859923_-418238790","id":"20170523-115343_1530976304","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7492"},{"text":"%pyspark\nrdd = sc.parallelize( [ \"a\", \"b\", \"c\", \"d\" ])\nres = rdd.zipWithIndex()\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859923_-418238790","id":"20181204-181853_1515639480","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7493"},{"title":"8. groupByKey Function","text":"val rdd = sc.parallelize(List(\"a\", \"b\", \"a\", \"b\")).zipWithIndex\nval res = rdd.groupByKey()\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859924_-420162535","id":"20170523-115429_578090431","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7494"},{"text":"%pyspark\nrdd = sc.parallelize( [ \"a\", \"b\", \"a\", \"b\" ]).zipWithIndex()\nres = rdd.groupByKey()\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859924_-420162535","id":"20181204-182058_21014984","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7495"},{"title":"9. ReduceByKey Function","text":"val rdd = sc.parallelize( List(\"a\", \"b\", \"a\", \"b\")).zipWithIndex()\nval res = rdd.reduceByKey(_ + _)\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859924_-420162535","id":"20170523-115432_2027652641","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7496"},{"text":"%pyspark\nrdd = sc.parallelize( [ \"a\", \"b\", \"a\", \"b\" ]).zipWithIndex()\nres = rdd.reduceByKey(lambda x, y: x +y)\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859924_-420162535","id":"20181204-183020_181239690","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7497"},{"title":"10. Join function ","text":"val person = List(\"adam\", \"ben\", \"chris\", \"david\")\nval age = List(27, 42, 53, 23)\nval dept = List(\"HPC\", \"Data\", \"Vis\", \"Edu\")\nval rdd1 = sc.parallelize(person.zip(age))\nval rdd2 = sc.parallelize(person.zip(dept))\nval res = rdd1.join(rdd2)\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859925_-420547284","id":"20170523-115448_1474428706","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7498"},{"text":"%pyspark \nperson = sc.parallelize([\"adam\", \"ben\", \"chris\", \"david\"])\nage = sc.parallelize([27, 42, 53, 23])\ndept = sc.parallelize([\"HPC\", \"Data\", \"Vis\", \"Edu\"])\nrdd1 = person.zip(age)\nrdd2 = person.zip(dept)\nres = rdd1.join(rdd2)\nres.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859925_-420547284","id":"20181204-194908_1327981886","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7499"},{"title":"11. wordcount","text":"val lines = sc.textFile(\"/tmp/data/book.txt\")\nval words = lines.flatMap(l => l.split(\" \"))\n                 .map(w => (w, 1))\n                 .reduceByKey(_ + _)\n                 .sortBy(_._2, false).collect\n","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859925_-420547284","id":"20170523-120016_483577617","dateCreated":"2018-12-04T22:07:39-0600","dateStarted":"2018-12-05T06:48:43-0600","dateFinished":"2018-12-05T06:48:45-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7500"},{"text":"%pyspark\nlines = sc.textFile(\"SPARK.out\")\nwords = lines.flatMap(lambda line: line.split(\" \")) \\\n             .map(lambda word: (word, 1)) \\\n             .reduceByKey(lambda a, b: a + b) \\\n             .sortBy(lambda a: a[1], False)\nwords.collect()","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859926_-419393037","id":"20181204-183130_229936641","dateCreated":"2018-12-04T22:07:39-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7501"},{"title":"12. Calculating Pi","text":"val NUM_SAMPLES=100000\nval count = sc.parallelize(1 to NUM_SAMPLES).filter { _ =>\n  val x = math.random\n  val y = math.random\n  x*x + y*y < 1\n}.count()\nprintln(s\"Pi is roughly ${4.0 * count / NUM_SAMPLES}\")","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859926_-419393037","id":"20181204-195401_201986694","dateCreated":"2018-12-04T22:07:39-0600","dateStarted":"2018-12-05T05:40:46-0600","dateFinished":"2018-12-05T05:40:46-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7502"},{"text":"%pyspark\nimport random as random\nNUM_SAMPLES=100000\n\ndef inside(p):\n    x, y = random.random(), random.random()\n    return x*x + y*y < 1\n\ncount = sc.parallelize(xrange(0, NUM_SAMPLES)) \\\n             .filter(inside).count()\nprint \"Pi is roughly %f\" % (4.0 * count / NUM_SAMPLES)","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543982859926_-419393037","id":"20181204-201431_1798209713","dateCreated":"2018-12-04T22:07:39-0600","dateStarted":"2018-12-05T05:35:59-0600","dateFinished":"2018-12-05T05:35:59-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7503"},{"title":"13 Dataframe Basics","text":"//loading file from local file system\n/*val df=spark.read.format(\"csv\")\n            .option(\"header\", true)\n            .load(\"/tmp/data/mtcars.csv\")\n*/\n//loading file from hdfs file system \nval df=spark.read.format(\"csv\")\n            .option(\"header\", true)\n            .load(\"/tmp/data/mtcars.csv\")            \n\ndf.show()\ndf.printSchema\ndf.describe().show\ndf.describe(\"mpg\").show\n","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544009600366_-665482077","id":"20181205-053320_1305284416","dateCreated":"2018-12-05T05:33:20-0600","dateStarted":"2018-12-05T06:34:44-0600","dateFinished":"2018-12-05T06:34:48-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7504"},{"title":"14. Read and Write with different file format","text":"df.show(100)\ndf.write.format(\"json\").mode(\"overwrite\").save(\"cars.json\")\ndf.write.parquet(\"cars.parquet\")\ndf.write.option(\"delimiter\",\"\\t\").csv(\"cars.tab\")\nval df_json = spark.read.json(\"cars.json\")\nval df_parquet = spark.read.parquet(\"cars.parquet\")\ndf_json.show\ndf_parquet.show","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544009795142_896722695","id":"20181205-053635_1858817951","dateCreated":"2018-12-05T05:36:35-0600","dateStarted":"2018-12-05T05:49:33-0600","dateFinished":"2018-12-05T05:49:33-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7505"},{"title":"15. RDD vs Dataframe vs. DataSet","text":"val rdd = sc.parallelize(0 until 100)\nval rdd_df =rdd.toDF\nval rdd_ds = rdd.toDS\n\nrdd.filter (_ < 10).collect\nrdd_df.filter(\"value < 10\").show\nrdd_ds.filter(\"value < 10\").show\nrdd_ds.filter(_ < 10).show\n\nrdd.map(_ * 2).collect\nrdd_ds.map(_ * 2).show\nrdd_df.map(_ * 2).show //this line will fail \nrdd_df.select('value * 2).show \n","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544010555363_611693279","id":"20181205-054915_1611902029","dateCreated":"2018-12-05T05:49:15-0600","dateStarted":"2018-12-05T06:41:35-0600","dateFinished":"2018-12-05T06:41:38-0600","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7506"},{"title":"16. RDD to Dataframe","text":"val rdd = sc.parallelize(0 until 10000)\nval simple_rdd_df = rdd.toDF\nsimple_rdd_df.show\n\ncase class Person(id: Int, name: String)\nval person = sc.parallelize(Seq( Person(1, \"Mike\"), \n                                 Person(2, \"Smith\"), \n                                 Person(3, \"Brooke\")))\nval person_df = person.toDF\nperson_df.show ","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544013537564_-939785094","id":"20181205-063857_1111149783","dateCreated":"2018-12-05T06:38:57-0600","dateStarted":"2018-12-05T06:41:52-0600","dateFinished":"2018-12-05T06:41:54-0600","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7507"},{"title":"17. Spark SQL functions","text":"df.select(\"model\",\"mpg\", \"wt\").show\ndf.select($\"model\", $\"mpg\" * 1.6).show\ndf.select(\"model\",\"mpg\", \"wt\", \"cyl\")\n  .filter(\"cyl > 4\").show\ndf.groupBy(\"cyl\").count().show\n","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544013723167_291120227","id":"20181205-064203_1671027480","dateCreated":"2018-12-05T06:42:03-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7508"},{"title":"18. Spark SQL statement","text":"df.createOrReplaceTempView(\"cars\")\nspark.sql(\"SELECT * FROM cars WHERE cyl = 6\")\n     .show\nspark.sql(\"SELECT cyl, avg(mpg) as avg_mpg, count(1) as count \"+\n          \"from cars \"+\n          \"group by cyl\")\n     .show","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544013712744_-1386400301","id":"20181205-064152_2090623997","dateCreated":"2018-12-05T06:41:52-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7509"},{"title":"19. Analysis example","text":"%spark\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.Pipeline\n\nval cars = spark.read.format(\"csv\").option(\"header\", true).load(\"/tmp/data/mtcars.csv\")\n                .selectExpr(\"model\", \"mpg + 0.0 as mpg\", \"disp + 0.0 as disp\", \n                            \"hp + 0.0 as hp\", \"drat + 0.0 as drat\", \"wt + 0.0 as wt\", \n                            \"cyl + 0.0 as label\")\n                \nval training= cars.sample(false, 0.8)\nval test= cars.except(training)\n\nval assembler = new VectorAssembler()\n  .setInputCols(Array(\"mpg\", \"disp\", \"hp\", \"drat\", \"wt\"))\n  .setOutputCol(\"features\")\n  \nval lr = new LogisticRegression()\n  .setMaxIter(10)\n  .setRegParam(0.2)\n  .setElasticNetParam(0.0)\n\nval pipeline = new Pipeline().setStages(Array(assembler, lr))\nval lrModel = pipeline.fit(training)\n\nval result = lrModel.transform(test).select('model, 'label, 'prediction)\nresult.show","user":"train292","dateUpdated":"2018-12-05T06:53:29-0600","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544013875105_202256911","id":"20181205-064435_1022233507","dateCreated":"2018-12-05T06:44:35-0600","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7510"}],"name":"Spark_Basic_V2","id":"2DW1GUCX2","angularObjects":{"2DXRJFCHA:shared_process":[],"2DZ91F7CY:shared_process":[],"2DW6MWA9T:shared_process":[],"2DXHTXPT1:shared_process":[],"2DWE1UVDA:shared_process":[],"2DXGKEVHT:shared_process":[],"2DYKQG83J:shared_process":[],"2DYH3SHX8:shared_process":[],"2DZFTQ2FG:shared_process":[],"2DZE6RDT2:shared_process":[],"2DXS86Z7H:shared_process":[],"2DWBPQ5RE:shared_process":[],"2DZED5DHW:shared_process":[],"2DYMNGUX2:shared_process":[],"2DYGVRMXF:shared_process":[],"2DZGPVNRC:shared_process":[],"2DYT4ECS9:shared_process":[],"2DWZHRNUD:shared_process":[],"2DXPRPPYD:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}